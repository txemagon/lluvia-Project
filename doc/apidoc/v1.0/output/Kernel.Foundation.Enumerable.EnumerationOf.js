Ext.data.JsonP.Kernel_Foundation_Enumerable_EnumerationOf({"tagname":"class","name":"Kernel.Foundation.Enumerable.EnumerationOf","autodetected":{},"files":[{"filename":"ll_EnumerationOf.js","href":"ll_EnumerationOf.html#Kernel-Foundation-Enumerable-EnumerationOf"}],"extends":"Kernel.Foundation.Enumerable.Enumeration","members":[{"name":"constructor","tagname":"method","owner":"Kernel.Foundation.Enumerable.EnumerationOf","id":"method-constructor","meta":{}},{"name":"add","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-add","meta":{}},{"name":"add$B","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-addS-B","meta":{}},{"name":"each","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-each","meta":{}},{"name":"full_name","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-full_name","meta":{}},{"name":"get","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-get","meta":{}},{"name":"get$B","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-getS-B","meta":{}},{"name":"transpose","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-transpose","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Kernel.Foundation.Enumerable.EnumerationOf","short_doc":"An Enumeration made of a subclass of VersionNumber\n\nImagine a normal enumeration:\n\nvar a = new Enumeration(\"spades\", ...","component":false,"superclasses":["Kernel.Foundation.Enumerable.Enumeration"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='docClass'>Kernel.Foundation.Enumerable.Enumeration</a><div class='subclass '><strong>Kernel.Foundation.Enumerable.EnumerationOf</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ll_EnumerationOf.html#Kernel-Foundation-Enumerable-EnumerationOf' target='_blank'>ll_EnumerationOf.js</a></div></pre><div class='doc-contents'><p>An Enumeration made of a subclass of VersionNumber</p>\n\n<p>Imagine a normal enumeration:</p>\n\n<pre><code>var a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\n</code></pre>\n\n<p>leaving the following memory imprint:</p>\n\n<pre><code>         {\n  \"spades\": 0,\n  \"hearts\": { 1,\n              \"red\": 1.1,\n              \"black\": 1.2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n   }\n</code></pre>\n\n<p>where all values are true VersionNumber instances.</p>\n\n<p>EnumerationOf provides us with a tool to work with VersionNumber subclasses.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.EnumerationOf'>Kernel.Foundation.Enumerable.EnumerationOf</span><br/><a href='source/ll_EnumerationOf.html#Kernel-Foundation-Enumerable-EnumerationOf-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Kernel.Foundation.Enumerable.EnumerationOf-method-constructor' class='name expandable'>Kernel.Foundation.Enumerable.EnumerationOf</a>( <span class='pre'>type, [rest]</span> ) : <a href=\"#!/api/Kernel.Foundation.Enumerable.EnumerationOf\" rel=\"Kernel.Foundation.Enumerable.EnumerationOf\" class=\"docClass\">Kernel.Foundation.Enumerable.EnumerationOf</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Example\n\n Let State inherit from VersionNumber\n\nvar e = new EnumerationOf(State, [\"running\", \"walking\", [\"slow\", \"fas...</div><div class='long'><h3>Example</h3>\n\n<p> Let State inherit from VersionNumber</p>\n\n<pre><code>var e = new EnumerationOf(State, [\"running\", \"walking\", [\"slow\", \"fast\"]])\n</code></pre>\n\n<p>will execute at a certain point:</p>\n\n<pre><code>obj.walking.slow = new State(\"1.1\")\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Class<div class='sub-desc'><p>VersionNumber derivate to use for value construction.</p>\n</div></li><li><span class='pre'>rest</span> : Object... (optional)<div class='sub-desc'><p>Arguments to be passed to Enumeration constructor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.Foundation.Enumerable.EnumerationOf\" rel=\"Kernel.Foundation.Enumerable.EnumerationOf\" class=\"docClass\">Kernel.Foundation.Enumerable.EnumerationOf</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration-method-constructor\" rel=\"Kernel.Foundation.Enumerable.Enumeration-method-constructor\" class=\"docClass\">Kernel.Foundation.Enumerable.Enumeration.constructor</a></p></div></div></div><div id='method-add' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-add' class='name expandable'>add</a>( <span class='pre'>constants, [place]</span> ) : VersionNumber<span class=\"signature\"></span></div><div class='description'><div class='short'>Enlarges the enumeration set by adding new constants at a given position. ...</div><div class='long'><p>Enlarges the enumeration set by adding new constants at a given position.</p>\n\n<h3>Example</h3>\n\n<p>Given:</p>\n\n<pre><code> var a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\n</code></pre>\n\n<p>will result in</p>\n\n<pre><code>   {\n  \"spades\": 0,\n  \"hearts\": { 1,\n              \"red\": 1,\n              \"black\": 2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n   }\n</code></pre>\n\n<p>and,\n     a.add([\"white\", \"yellow\"], \"hearts.red\")\nor,\n     a.add([\"white\", \"yellow\"], \"1.1\")</p>\n\n<p>will end up in,</p>\n\n<pre><code>{\n  \"spades\": 0,\n  \"hearts\": { 1,\n              \"red\": { 1,\n                       \"white\": 1,\n                       \"yellow\": 2\n                     },\n              \"black\": 2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n   }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>constants</span> : Array | String<div class='sub-desc'><p>List of new constant values.</p>\n</div></li><li><span class='pre'>place</span> : String (optional)<div class='sub-desc'><p>Name or value of the position to insert the constants.\n                        in cannot be empty when the last high level position\n                        , clovers in the example above, is undefined.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>VersionNumber</span><div class='sub-desc'><p>Returns the place where the constants were added.</p>\n</div></li></ul></div></div></div><div id='method-addS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-addS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-addS-B' class='name expandable'>add$B</a>( <span class='pre'>constants, place</span> ) : [type]<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as add, but creating intermediate states when needed. ...</div><div class='long'><p>Same as <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration-method-add\" rel=\"Kernel.Foundation.Enumerable.Enumeration-method-add\" class=\"docClass\">add</a>, but creating intermediate states when needed. See <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration-method-getS-B\" rel=\"Kernel.Foundation.Enumerable.Enumeration-method-getS-B\" class=\"docClass\">get$B</a> for\nfurther reference.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>constants</span> : [type]<div class='sub-desc'><p>[description]</p>\n</div></li><li><span class='pre'>place</span> : [type]<div class='sub-desc'><p>[description]</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>[type]</span><div class='sub-desc'><p>[description]</p>\n</div></li></ul></div></div></div><div id='method-each' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-each' class='name expandable'>each</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Iterates over key-value pairs inside the enumeration. ...</div><div class='long'><p>Iterates over key-value pairs inside the enumeration.</p>\n\n<h3>Example</h3>\n\n<p>  Let a be defined as</p>\n\n<pre><code>var a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\n</code></pre>\n\n<p> with the following inner structure:</p>\n\n<pre><code>   {\n  \"spades\": 0,\n  \"hearts\": { 1,\n              \"red\": 1,\n              \"black\": 2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n   }\n</code></pre>\n\n<p>  When called</p>\n\n<pre><code>a.each(function(key, value) {;})\n</code></pre>\n\n<p>key-value pairs will be:</p>\n\n<table>\n<thead>\n<tr>\n<th> key          </th>\n<th style=\"text-align:right;\"> value  </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> spades       </td>\n<td style=\"text-align:right;\"> 0      </td>\n</tr>\n<tr>\n<td> hearts       </td>\n<td style=\"text-align:right;\"> 1      </td>\n</tr>\n<tr>\n<td> hearts.red   </td>\n<td style=\"text-align:right;\"> 1.1    </td>\n</tr>\n<tr>\n<td> hearts.black </td>\n<td style=\"text-align:right;\"> 1.2    </td>\n</tr>\n<tr>\n<td> diamonds     </td>\n<td style=\"text-align:right;\"> 2      </td>\n</tr>\n<tr>\n<td> clovers      </td>\n<td style=\"text-align:right;\"> 3      </td>\n</tr>\n</tbody>\n</table>\n\n</div></div></div><div id='method-full_name' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-full_name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-full_name' class='name expandable'>full_name</a>( <span class='pre'>key</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the full name of a constant. ...</div><div class='long'><p>Returns the full name of a constant.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new Enumeration(\"red\", [\"hearts\", \"diamonds\"])\na.full_name(\"0.2\")\n//=&gt; \"red.diamonds\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key to search</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Name of the value sarched.</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-get' class='name expandable'>get</a>( <span class='pre'>label</span> ) : VersionNumber<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a the value of a constant given the constant name. ...</div><div class='long'><p>Returns a the value of a constant given the constant name.\nWhen the value is passed it is returned previously checking\nis actually present in the set.\nnull is returned when key isn't found.</p>\n\n<h3>Example</h3>\n\n<p>Given:</p>\n\n<pre><code> var a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\n</code></pre>\n\n<p>will result in</p>\n\n<pre><code>   {\n  \"spades\": 0,\n  \"hearts\": { 1,\n              \"red\": 1,\n              \"black\": 2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n   }\n</code></pre>\n\n<p>executing</p>\n\n<pre><code> a.get(\"hearts.red\")\n // =&gt; '1.1'\n a.get(\"1.1\")\n // =&gt; '1.1'\n a.get('5.7')\n // =&gt; null\n a.get(\"bat.man\")\n // =&gt; null\n</code></pre>\n\n<h2>Notice</h2>\n\n<p> Despite the return value appears as a string in the example above,\n actually is a VersionNumber (or derivated). This seems interesting\n since this kind of numbers can hold the ability to perform actions,\n as we can see in the <a href=\"#!/api/Engine.State\" rel=\"Engine.State\" class=\"docClass\">State</a> class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Constant name to look for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>VersionNumber</span><div class='sub-desc'><p>Value of the constant.</p>\n</div></li></ul></div></div></div><div id='method-getS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-getS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-getS-B' class='name expandable'>get$B</a>( <span class='pre'>label</span> ) : [type]<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as get but creating empty states when missing intermediate ones. ...</div><div class='long'><p>Same as <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration-method-get\" rel=\"Kernel.Foundation.Enumerable.Enumeration-method-get\" class=\"docClass\">get</a> but creating empty states when missing intermediate ones.\nTake option -p in mkdir as an example</p>\n\n<p>Given state running\n   running\nwhen getting$B running.fast.by_bike\n    running.fast\nand\n    running.fast.by_bike\nwill be created.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>label</span> : [type]<div class='sub-desc'><p>[description]</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>[type]</span><div class='sub-desc'><p>[description]</p>\n</div></li></ul></div></div></div><div id='method-transpose' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration' rel='Kernel.Foundation.Enumerable.Enumeration' class='defined-in docClass'>Kernel.Foundation.Enumerable.Enumeration</a><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-transpose' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-transpose' class='name expandable'>transpose</a>( <span class='pre'>[Type]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes an InterleavedArray and inverts it, due to InterleavedArray and Enumeration reciprocity. ...</div><div class='long'><p>Takes an InterleavedArray and inverts it, due to InterleavedArray and Enumeration reciprocity.\nNot enumerable, not configurable, not writable.</p>\n\n<p>Given the following InterleavedArray,</p>\n\n<pre><code>   {\n   \"0\": \"spades\",\n   \"1\": \"hearts\",\n   \"1.1\": \"red\",\n   \"1.2\": \"black\",\n   \"2\": \"diamonds\",\n   \"3\": \"clovers\"\n  }\n</code></pre>\n\n<p>will be turned inside this into:\n        {\n      \"spades\": 0,\n      \"hearts\": { 1,\n                  \"red\": 1.1,\n                  \"black\": 1.2\n                 },\n       \"diamonds\": 2,\n       \"clovers\": 3\n       }</p>\n\n<p> through this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Type</span> : Class (optional)<div class='sub-desc'><p>Class for assigning values</p>\n<p>Defaults to: <code>VersionNumber</code></p></div></li></ul></div></div></div></div></div></div></div>","meta":{}});